# syntax=docker/dockerfile:1

FROM zhongruoyu/buildpack-deps:base

ARG LDFLAGS="-Wl,-rpath,/usr/local/lib -Wl,-rpath,/usr/local/lib64"

ARG ZLIB_VERSION
ARG ZLIB_SHA256
RUN <<RUN
  set -eux
  mkdir -p /usr/local/src/zlib
  curl -fsSL "https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz" \
    -o "/tmp/zlib-${ZLIB_VERSION}.tar.gz"
  echo "${ZLIB_SHA256}  /tmp/zlib-${ZLIB_VERSION}.tar.gz" |
    sha256sum -c
  tar \
    -C /usr/local/src/zlib \
    -xzf "/tmp/zlib-${ZLIB_VERSION}.tar.gz" \
    --strip-components=1
  mkdir -p /tmp/zlib
  cd /tmp/zlib
  /usr/local/src/zlib/configure \
    --prefix=/usr/local
  make -j "$(nproc)"
  make -j "$(nproc)" install
  cd /
  rm -rf \
    "/tmp/zlib-${ZLIB_VERSION}.tar.gz" \
    /usr/local/src/zlib \
    /tmp/zlib
  ldconfig
RUN

ARG OPENSSL_VERSION
ARG OPENSSL_SHA256
RUN <<RUN
  set -eux
  mkdir -p /usr/local/src/openssl
  curl -fsSL "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz" \
    -o "/tmp/openssl-${OPENSSL_VERSION}.tar.gz"
  echo "${OPENSSL_SHA256}  /tmp/openssl-${OPENSSL_VERSION}.tar.gz" |
    sha256sum -c
  tar \
    -C /usr/local/src/openssl \
    -xzf "/tmp/openssl-${OPENSSL_VERSION}.tar.gz" \
    --strip-components=1
  mkdir -p /tmp/openssl
  cd /tmp/openssl
  /usr/local/src/openssl/config --prefix=/usr/local
  make -j "$(nproc)"
  make -j "$(nproc)" install
  cd /
  rm -rf \
    "/tmp/openssl-${OPENSSL_VERSION}.tar.gz" \
    /usr/local/src/openssl \
    /tmp/openssl
  ldconfig
RUN

ARG CURL_VERSION
ARG CURL_SHA256
RUN <<RUN
  set -eux
  mkdir -p /usr/local/src/curl
  curl -fsSL "https://curl.se/download/curl-${CURL_VERSION}.tar.gz" \
    -o "/tmp/curl-${CURL_VERSION}.tar.gz"
  echo "${CURL_SHA256}  /tmp/curl-${CURL_VERSION}.tar.gz" |
    sha256sum -c
  tar \
    -C /usr/local/src/curl \
    -xzf "/tmp/curl-${CURL_VERSION}.tar.gz" \
    --strip-components=1
  mkdir -p /tmp/curl
  cd /tmp/curl
  /usr/local/src/curl/configure \
    --prefix=/usr/local \
    --with-openssl \
    --without-libpsl
  make -j "$(nproc)"
  make -j "$(nproc)" install
  cd /
  rm -rf \
    "/tmp/curl-${CURL_VERSION}.tar.gz" \
    /usr/local/src/curl \
    /tmp/curl
  ldconfig
RUN

ARG GIT_VERSION
ARG GIT_SHA256
RUN <<RUN
  set -eux
  mkdir -p /usr/local/src/git
  curl -fsSL "https://www.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.gz" \
    -o "/tmp/git-${GIT_VERSION}.tar.gz"
  echo "${GIT_SHA256}  /tmp/git-${GIT_VERSION}.tar.gz" |
    sha256sum -c
  tar \
    -C /usr/local/src/git \
    -xzf "/tmp/git-${GIT_VERSION}.tar.gz" \
    --strip-components=1
  cd /usr/local/src/git
  ./configure \
    --prefix=/usr/local
  make -j "$(nproc)" \
    CSPRNG_METHOD=openssl
  make -j "$(nproc)" install \
    CSPRNG_METHOD=openssl
  cd /
  rm -rf \
    "/tmp/git-${GIT_VERSION}.tar.gz" \
    /usr/local/src/git
RUN

ARG CMAKE_VERSION
ARG CMAKE_SHA256
RUN <<RUN
  set -eux
  mkdir -p /usr/local/src/cmake
  curl -fsSL "https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}.tar.gz" \
    -o "/tmp/cmake-${CMAKE_VERSION}.tar.gz"
  echo "${CMAKE_SHA256}  /tmp/cmake-${CMAKE_VERSION}.tar.gz" |
    sha256sum -c
  tar \
    -C /usr/local/src/cmake \
    -xzf "/tmp/cmake-${CMAKE_VERSION}.tar.gz" \
    --strip-components=1
  mkdir -p /tmp/cmake
  cd /tmp/cmake
  /usr/local/src/cmake/configure \
    --prefix=/usr/local \
    --parallel="$(nproc)"
  make -j "$(nproc)"
  make -j "$(nproc)" install
  cd /
  rm -rf \
    "/tmp/cmake-${CMAKE_VERSION}.tar.gz" \
    /usr/local/src/cmake \
    /tmp/cmake
RUN

ARG PYTHON_VERSION
ARG PYTHON_SHA256
RUN <<RUN
  set -eux
  mkdir -p /usr/local/src/python
  curl -fsSL "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" \
    -o "/tmp/python-${PYTHON_VERSION}.tgz"
  echo "${PYTHON_SHA256}  /tmp/python-${PYTHON_VERSION}.tgz" |
    sha256sum -c
  tar \
    -C /usr/local/src/python \
    -xzf "/tmp/python-${PYTHON_VERSION}.tgz" \
    --strip-components=1
  mkdir -p /tmp/python
  cd /tmp/python
  /usr/local/src/python/configure \
    --prefix=/usr/local
  make -j "$(nproc)"
  make -j "$(nproc)" install
  cd /
  rm -rf \
    "/tmp/python-${PYTHON_VERSION}.tgz" \
    /usr/local/src/python \
    /tmp/python
RUN
