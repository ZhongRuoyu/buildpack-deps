name: Docker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GCC_VERSION: "15.1.0"
  GCC_SHA256: "51b9919ea69c980d7a381db95d4be27edf73b21254eb13d752a08003b4d013b1"
  MAKE_VERSION: "4.4.1"
  MAKE_SHA256: "dd16fb1d67bfab79a72f5e8390735c49e3e8e70b4945a15ab1f81ddb78658fb3"
  LINUX_HEADERS_VERSION: "6.12.40"
  LINUX_HEADERS_SHA256: "a25d5a7f2d48546678702f13681d9652bd7701c60ab8b60496cad17175a97f0f"
  BINUTILS_VERSION: "2.45"
  BINUTILS_SHA256: "8a3eb4b10e7053312790f21ee1a38f7e2bbd6f4096abb590d3429e5119592d96"
  ZLIB_VERSION: "1.3.1"
  ZLIB_SHA256: "9a93b2b7dfdac77ceba5a558a580e74667dd6fede4585b91eefb60f03b72df23"
  OPENSSL_VERSION: "3.5.1"
  OPENSSL_SHA256: "529043b15cffa5f36077a4d0af83f3de399807181d607441d734196d889b641f"
  CURL_VERSION: "8.15.0"
  CURL_SHA256: "d85cfc79dc505ff800cb1d321a320183035011fa08cb301356425d86be8fc53c"
  GIT_VERSION: "2.48.1"
  GIT_SHA256: "51b4d03b1e311ba673591210f94f24a4c5781453e1eb188822e3d9cdc04c2212"
  CMAKE_VERSION: "3.31.5"
  CMAKE_SHA256: "66fb53a145648be56b46fa9e8ccade3a4d0dfc92e401e52ce76bdad1fea43d27"
  PYTHON_VERSION: "3.13.2"
  PYTHON_SHA256: "b8d79530e3b7c96a5cb2d40d431ddb512af4a563e863728d8713039aa50203f9"

jobs:
  base-build:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64
        include:
          - arch: x86_64
            runs-on: ubuntu-latest
          - arch: aarch64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: zhongruoyu
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.arch }}/Dockerfile.base
          platforms: linux/${{ matrix.arch }}
          build-args: |
            GCC_VERSION=${{ env.GCC_VERSION }}
            GCC_SHA256=${{ env.GCC_SHA256 }}
            MAKE_VERSION=${{ env.MAKE_VERSION }}
            MAKE_SHA256=${{ env.MAKE_SHA256 }}
            LINUX_HEADERS_VERSION=${{ env.LINUX_HEADERS_VERSION }}
            LINUX_HEADERS_SHA256=${{ env.LINUX_HEADERS_SHA256 }}
            BINUTILS_VERSION=${{ env.BINUTILS_VERSION }}
            BINUTILS_SHA256=${{ env.BINUTILS_SHA256 }}
          outputs: type=image,name=zhongruoyu/buildpack-deps,name-canonical=true,push=true,push-by-digest=true
      - name: Export digest
        run: |
          mkdir -p "$RUNNER_TEMP"/digests
          echo "${DIGEST#sha256:}" > "$RUNNER_TEMP"/digests/"$ARCH"
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          ARCH: ${{ matrix.arch }}
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-base-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*

  base-merge:
    needs: base-build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: zhongruoyu
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-base-*
          merge-multiple: true
      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            --tag=zhongruoyu/buildpack-deps:base \
            zhongruoyu/buildpack-deps@sha256:"$(cat "$RUNNER_TEMP"/digests/x86_64)" \
            zhongruoyu/buildpack-deps@sha256:"$(cat "$RUNNER_TEMP"/digests/aarch64)"

  extended-build:
    needs: base-merge
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64
        include:
          - arch: x86_64
            runs-on: ubuntu-latest
          - arch: aarch64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: zhongruoyu
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.arch }}/Dockerfile.extended
          platforms: linux/${{ matrix.arch }}
          build-args: |
            ZLIB_VERSION=${{ env.ZLIB_VERSION }}
            ZLIB_SHA256=${{ env.ZLIB_SHA256 }}
            OPENSSL_VERSION=${{ env.OPENSSL_VERSION }}
            OPENSSL_SHA256=${{ env.OPENSSL_SHA256 }}
            CURL_VERSION=${{ env.CURL_VERSION }}
            CURL_SHA256=${{ env.CURL_SHA256 }}
            GIT_VERSION=${{ env.GIT_VERSION }}
            GIT_SHA256=${{ env.GIT_SHA256 }}
            CMAKE_VERSION=${{ env.CMAKE_VERSION }}
            CMAKE_SHA256=${{ env.CMAKE_SHA256 }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
            PYTHON_SHA256=${{ env.PYTHON_SHA256 }}
          outputs: type=image,name=zhongruoyu/buildpack-deps,name-canonical=true,push=true,push-by-digest=true
      - name: Export digest
        run: |
          mkdir -p "$RUNNER_TEMP"/digests
          echo "${DIGEST#sha256:}" > "$RUNNER_TEMP"/digests/"$ARCH"
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          ARCH: ${{ matrix.arch }}
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-extended-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*

  extended-merge:
    needs: extended-build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: zhongruoyu
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-extended-*
          merge-multiple: true
      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            --tag=zhongruoyu/buildpack-deps:extended \
            zhongruoyu/buildpack-deps:extended@sha256:"$(cat "$RUNNER_TEMP"/digests/x86_64)" \
            zhongruoyu/buildpack-deps:extended@sha256:"$(cat "$RUNNER_TEMP"/digests/aarch64)"
